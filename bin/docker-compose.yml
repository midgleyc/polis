version: "3.1"

services:
  server:
    container_name: polis-server
    env_file: ./docker-server.env
    image: polis/server:prod
    build:
      context: ../server
    depends_on:
      - "postgres"
      - "file-server"
    networks:
      - "polis"
    ports:
      - "5000:5000"

  math:
    container_name: polis-math
    env_file: ./docker-math.env
    image: polis/math:prod
    depends_on:
      - "postgres"
    build:
      context: ../math
    networks:
      - "polis"

  postgres:
    container_name: polis-postgres
    env_file: ./docker-db.env
    image: polis/postgres:prod
    restart: always
    build:
      context: ../server
      dockerfile: Dockerfile-db
    networks:
      - "polis"
    volumes:
      - "backups:/backups"
      - "postgres:/var/lib/postgresql/data"

  file-server:
    container_name: polis-file-server
    image: polis/file-server:prod
    build:
      context: ../file-server
      args:
        TAG: "prod"
    depends_on:
      - "client-participation"
      - "client-admin"
      - "client-report"
    networks:
      - "polis"
    ports:
      - "8080:8080"

  client-participation:
    container_name: polis-client-participation
    image: polis/client-participation:prod
    build:
      context: ../client-participation
      args:
        GIT_HASH: "${GIT_HASH}"

  client-admin:
    container_name: polis-client-admin
    image: polis/client-admin:prod
    build:
      context: ../client-admin
      args:
        GIT_HASH: "${GIT_HASH}"

  client-report:
    container_name: polis-client-report
    image: polis/client-report:prod
    build:
      context: ../client-report
      args:
        GIT_HASH: "${GIT_HASH}"

  maildev:
    image: maildev/maildev:1.1.0
    networks:
      - "polis"
    ports:
      # User interface
      - "1080:80"
      # SMTP port
      - "25:25"

networks:
  polis:

volumes:
  backups:
  postgres:
